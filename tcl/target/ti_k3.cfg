# SPDX-License-Identifier: GPL-2.0-or-later
# Copyright (C) 2019-2021 Texas Instruments Incorporated - http://www.ti.com/
#
# Texas Instruments K3 devices:
# * AM654x: https://www.ti.com/lit/pdf/spruid7
#  Has 4 ARMV8 Cores and 2 R5 Cores and an M3
# * J721E: https://www.ti.com/lit/pdf/spruil1
#  Has 2 ARMV8 Cores and 6 R5 Cores and an M3
# * J7200: https://www.ti.com/lit/pdf/spruiu1
#  Has 2 ARMV8 Cores and 4 R5 Cores and an M3
# * AM642: https://www.ti.com/lit/pdf/spruim2
#  Has 2 ARMV8 Cores and 4 R5 Cores, M4F and an M3
#

if { [info exists SOC] } {
	set _soc $SOC
} else {
	set _soc am654
}

# set V8_SMP_DEBUG to non 0 value in board if you'd like to use SMP debug
if { [info exists V8_SMP_DEBUG] } {
	set _v8_smp_debug $V8_SMP_DEBUG
} else {
	set _v8_smp_debug 0
}

# Common Definitions

# System Controller is the very first processor - all current SoCs have it.
set CM3_CTIBASE		{0x3C016000}

# sysctrl power-ap unlock offsets
set _sysctrl_ap_unlock_offsets {0xf0 0x44}

# All the ARMV8s are the next processors.
#		   CL0,CORE0  CL0,CORE1  CL1,CORE0  CL1,CORE1
set ARMV8_DBGBASE {0x90410000 0x90510000 0x90810000 0x90910000}
set ARMV8_CTIBASE {0x90420000 0x90520000 0x90820000 0x90920000}

# And we add up the R5s
#		(0)MCU 0   (1)MCU 1   (2)MAIN_0_0 (3)MAIN_0_1 (4)MAIN_1_0 (5)MAIN_1_1
set R5_DBGBASE {0x9d010000 0x9d012000 0x9d410000 0x9d412000 0x9d510000 0x9d512000}
set R5_CTIBASE {0x9d018000 0x9d019000 0x9d418000 0x9d419000 0x9d518000 0x9d519000}
set R5_NAMES {mcu_r5.0 mcu_r5.1 main0_r5.0 main0_r5.1 main1_r5.0 main1_r5.1}

# Finally an General Purpose(GP) MCU
set CM4_CTIBASE		{0x20001000}

# General Purpose MCU (M4) may be present on some very few SoCs
set _gp_mcu_cores 0
# General Purpose MCU power-ap unlock offsets
set _gp_mcu_ap_unlock_offsets {0xf0 0x60}

# Set configuration overrides for each SOC
switch $_soc {
	am654 {
		set _CHIPNAME am654
		set _K3_DAP_TAPID 0x0bb5a02f

		# AM654 has 2 clusters of 2 A53 cores each.
		set _armv8_cpu_name a53
		set _armv8_cores 4

		# AM654 has 1 cluster of 2 R5s cores.
		set _r5_cores 2
		set R5_NAMES {mcu_r5.0 mcu_r5.1}

		# Sysctrl power-ap unlock offsets
		set _sysctrl_ap_unlock_offsets {0xf0 0x50}
	}
	am642 {
		set _CHIPNAME am642
		set _K3_DAP_TAPID 0x0bb3802f

		# AM642 has 1 clusters of 2 A53 cores each.
		set _armv8_cpu_name a53
		set _armv8_cores 2
		set ARMV8_DBGBASE {0x90010000 0x90110000}
		set ARMV8_CTIBASE {0x90020000 0x90120000}

		# AM642 has 2 cluster of 2 R5s cores.
		set _r5_cores 4
		set R5_NAMES {main0_r5.0 main0_r5.1 main1_r5.0 main1_r5.1}
		set R5_DBGBASE {0x9d410000 0x9d412000 0x9d510000 0x9d512000}
		set R5_CTIBASE {0x9d418000 0x9d419000 0x9d518000 0x9d519000}

		# M4 processor
		set _gp_mcu_cores 1
	}
	am625 {
		set _CHIPNAME am625
		set _K3_DAP_TAPID 0x0bb7e02f

		# AM625 has 1 clusters of 4 A53 cores.
		set _armv8_cpu_name a53
		set _armv8_cores 4
		set ARMV8_DBGBASE {0x90010000 0x90110000 0x90210000 0x90310000}
		set ARMV8_CTIBASE {0x90020000 0x90120000 0x90220000 0x90320000}

		# AM625 has 1 cluster of 1 R5s core.
		set _r5_cores 1
		set R5_NAMES {main0_r5.0}
		set R5_DBGBASE {0x9d410000}
		set R5_CTIBASE {0x9d418000}

		# sysctrl CTI base
		set CM3_CTIBASE {0x20001000}
		# Sysctrl power-ap unlock offsets
		set _sysctrl_ap_unlock_offsets {0xf0 0x78}

		# M4 processor
		set _gp_mcu_cores 1
		set _gp_mcu_ap_unlock_offsets {0xf0 0x7c}
	}
	j721e {
		set _CHIPNAME j721e
		set _K3_DAP_TAPID 0x0bb6402f
		# J721E has 1 cluster of 2 A72 cores.
		set _armv8_cpu_name a72
		set _armv8_cores 2

		# J721E has 3 clusters of 2 R5 cores each.
		set _r5_cores 6
	}
	j7200 {
		set _CHIPNAME j7200
		set _K3_DAP_TAPID 0x0bb6d02f

		# J7200 has 1 cluster of 2 A72 cores.
		set _armv8_cpu_name a72
		set _armv8_cores 2

		# J7200 has 2 clusters of 2 R5 cores each.
		set _r5_cores 4
		set R5_DBGBASE {0x9d010000 0x9d012000 0x9d110000 0x9d112000}
		set R5_CTIBASE {0x9d018000 0x9d019000 0x9d118000 0x9d119000}

		# M3 CTI base
		set CM3_CTIBASE {0x20001000}
	}
	j721s2 {
		set _CHIPNAME j721s2
		set _K3_DAP_TAPID 0x0bb7502f

		# J721s2 has 1 cluster of 2 A72 cores.
		set _armv8_cpu_name a72
		set _armv8_cores 2

		# J721s2 has 3 clusters of 2 R5 cores each.
		set _r5_cores 6

		# sysctrl CTI base
		set CM3_CTIBASE {0x20001000}
		# Sysctrl power-ap unlock offsets
		set _sysctrl_ap_unlock_offsets {0xf0 0x78}

		# M4 processor
		set _gp_mcu_cores 1
		set _gp_mcu_ap_unlock_offsets {0xf0 0x7c}
	}
	default {
		echo "'$_soc' is invalid!"
	}
}

